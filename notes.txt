4th Sep 2025
============

App Development 

    -> Backend (Business Logics)

    -> Java : Java is a high-level, general-purpose, memory-safe, object-oriented programming language. It is intended to let programmers write once, run anywhere, meaning that compiled Java code can run on all platforms that support Java without the need to recompile.

    -> Programming Language : Communicate with Computers (Machines)

    -> Human To Human : English, Hindi, Telugu etc

    -> Machines cannot understand English, Hindi, Telugu etc

    -> Machines can understand Machine / Binary Language (010101010001)

        -> 01101010 01100001 01110110 01100001 --> java

        -> Low Level Language

    -> Java is a high-level Language (Application Development)

     -> Java is a general-purpose Language 

        -> Used only for multiple purposes

                -> Java can i build desktop apps -> YES
                -> Java can i build web apps -> YES
                -> Java can i build API's -> YES

        -> Domain Specific Languages : Used only for specific purpose 
            
            -> SQL (Structured Query Language) is a domain-specific language used to manage data, especially in a relational database management system.

                -> SQL can i build desktop apps -> NO
                -> SQL can i build web apps -> NO
                -> SQL can i build API's -> NO

    -> Programming Paradigms 

        -> Paradigm : Way To Solve To Problem / Structure 

            -> Imperative : HOW TO DO (Java)

            -> Declarative : WHAT TO DO (SQL)

    -> Compiled Languages : Java 

        -> Best In Performance (Speed Of App) 

        -> Enterprise 
        -> Banking (Finance)
        -> Security (Govt / Defense )

    -> Interpreted Languages : Python

        -> Low In Performance

            -> Data Science (AI / ML / DL)
            -> Data Analytics 
            -> Scripting 

        -> Very Good Proto Type Language (Research)

        -> Speed Of Development 


-> RoadMap 

    -> Core Java (Language Fundamentals) (No Projects) (11 AM)

        -> Front End (HTML + CSS + JS + REACT) - Parallel ()

    -> Advance Java - Projects
        -> Frameworks 
            -> Collections Framework
            -> Database (SQL + JDBC)
            -> Web Apps (Spring + Spring Boot)
    
    -> Cloud & DevOps - Deployment 

5th Sep 2025
============

    -> Hardware Spec:

        -> i5 / i3 processor 
        -> 8 GB RAM 
        -> 500 GB HDD

    -> Softwares:

        -> Install Java Development Kit (JDK) -- Runtime Setup (Environment Setup)
        
        -> IDE : Integrated Development Environment

            -> Writing Code IDE
            -> Visual Studio Code (VS Code)
            
        -> Version Control Systems (VCS)

            -> Tracking Project Code (web site files, programs, docs etc)

            -> Git 

                -> Git is client software, i.e installed in developer laptop

            -> GitHub 

                -> Github is a platform offered as a service, to store source code

                -> Every developer will create an account on Github (github.com)

                -> Project : Repository (Remote Repository)

                -> Cloning : Make a identical copy 

                    -> A developer will clone Remote Repository using Git client 

                    -> Where we cloned ? 

                        -> In side developer laptop to some path/location (downloads, desktop etc)
                    
                    -> Project : Repository In Laptop (Local Repository)

                    -> As a developer --> Task for building employee salary sorting 

                        -> Start writing code inside Local Repository (laptop)

                            -> Complex Apps (Lots of Files i.e Code)

                                -> not_working_code (Working Area)
                                -> partially_working_code (Staging Area)
                                -> working_code (Local Area)


            -> Integrate Git, GitHub & VS Code

8th Sep 2025
============

    -> Install Java 

        -> java --version 

        -> Download From : https://www.oracle.com/java/technologies/downloads/

            -> LTS(Long Term Support) Version - 21 (JDK - Java Development Kit)
        
    -> Install IDE 

        -> Visual Studio Code - VS Code (Writing Code)

        -> https://code.visualstudio.com/download
    
    -> Install Git (Tracking Code)

        -> https://code.visualstudio.com/download
    
    -> Create GitHub Account

        -> http://github.com/

        -> Create Repository (Project) : Remote Repository

            -> Add README (first commit)

            -> Cloned Repository

            -> Local System (Local Repository)

            -> Register Developer Details (Using Git Bash)

                -> From Start Menu (GitBash)

                -> git config --global user.name github_user_id

                -> git config --global user.email github_email_id
            
            -> Start Writing Code & Track Code & Commit Code & Push Code

9th Sep 2025
============

    -> Write Code : Instructing what task to perform 
    
    -> Compilation : Convert Source Code To Intermediate Byte Code (.class file) (It will verify Syntax)

        -> Syntax : Rules / Guidelines 

            -> Every Java File must start with (class, interface, enum, or record expected)

                -> class is must for beginner level
                -> proper method declaration should be given (main method is starting point of a program) 
                -> main method declaration/signature :
                    public static void main(String [] args) {

                    } 

                    -> public : access modifier (visibility control)
                    -> static : keyword that says no need of object to perform operation 
                    -> void : keyword that says we will not return anything (void means nothing)
                    -> main : method name 
                    -> String : data type for text kind of data 
                    -> [] : Array data 
                    -> args : arguments 

                -> ; indicates end of statement 

                -> text data in java is represented using "text"

                -> cannot find symbol : print

                -> NOTE : You want to print in java then use following Syntax
                            System.out.println("Welcome")


        -> javac (Java Compiler) : utility / tool which is part of JDK installation

        -> To peform Compilation : javac App.java 

            -> App.java 

                print(Welcome)

            -> After Compilation : App.class (Byte Code)

                -> error: class, interface, enum, or record expected

                    class Hello {
                        print(Welcome)
                    }

                ->  error: invalid method declaration

                    class Hello {
                        public static void main(String [] args) {
                            print(Welcome)
                        }
                    }

                ->  error: error: ';' expected

                    class Hello {
                        public static void main(String [] args) {
                            print(Welcome);
                        }
                    }

                -> error: cannot find symbol
                            print(Welcome);
                                ^
                    symbol:   variable Welcome
                
                -> Print data of type text 

                    -> text data in java is represented using "text"

                    class Hello {
                        public static void main(String [] args) {
                            print("Welcome");
                        }
                    }
                
                -> error: cannot find symbol
                        print

                        class Hello {
                            public static void main(String [] args) {
                                System.out.println("Welcome");
                            }
                        }

            -> NOTE : Success (output is Hello.class file)

                -> The file is not displayed in the text editor 
                because it is either binary or uses an unsupported text encoding.

            -> java(jvm java virtual machine will be invoked) is the command we use to interpret byte code

                -> Syntax : java ClassName 

        -> Any Java Programming

                                                            javac        no issues
            -> App.java (Source Code / Human Readable) -> Comiplation -> App.class -> JVM -> Machine (10101)

        -> Java Slogan : Write Once Run Anywhere (WORA)

